import { CellRenderer, DataGrid, DataModel, GraphicsContext } from "@phosphor/datagrid";
import { BeakerXDataGridModel } from "./model/BeakerXDataGridModel";
import { Widget } from "@phosphor/widgets";
import { Signal } from '@phosphor/signaling';
import { ICellData } from "./interface/ICell";
import DataGridColumn from "./column/DataGridColumn";
import IDataModelState from "./interface/IDataGridModelState";
import HighlighterManager from "./highlighter/HighlighterManager";
import ColumnManager from "./column/ColumnManager";
import RowManager from "./row/RowManager";
import CellSelectionManager from "./cell/CellSelectionManager";
import CellManager from "./cell/CellManager";
import EventManager from "./event/EventManager";
import CellFocusManager from "./cell/CellFocusManager";
import CellTooltipManager from "./cell/CellTooltipManager";
import { BeakerXDataStore } from "./store/BeakerXDataStore";
import ColumnPosition from "./column/ColumnPosition";
import { SectionList } from "@phosphor/datagrid/lib/sectionlist";
import ColumnRegion = DataModel.ColumnRegion;
import { DataGridResize } from "./DataGridResize";
export declare class BeakerXDataGrid extends DataGrid {
    id: string;
    store: BeakerXDataStore;
    columnSections: SectionList;
    columnHeaderSections: SectionList;
    model: BeakerXDataGridModel;
    rowHeaderSections: SectionList;
    rowSections: SectionList;
    viewport: Widget;
    highlighterManager: HighlighterManager;
    columnManager: ColumnManager;
    columnPosition: ColumnPosition;
    rowManager: RowManager;
    cellSelectionManager: CellSelectionManager;
    cellManager: CellManager;
    eventManager: EventManager;
    cellFocusManager: CellFocusManager;
    cellTooltipManager: CellTooltipManager;
    dataGridResize: DataGridResize;
    canvasGC: GraphicsContext;
    focused: boolean;
    wrapperId: string;
    cellHovered: Signal<this, {
        data: ICellData;
        event: MouseEvent;
    }>;
    commSignal: Signal<this, {}>;
    static FOCUS_CSS_CLASS: string;
    constructor(options: DataGrid.IOptions, dataStore: BeakerXDataStore);
    init(store: BeakerXDataStore): void;
    getColumn(config: CellRenderer.ICellConfig): DataGridColumn;
    getColumnByName(columnName: string): DataGridColumn | undefined;
    getCellData(clientX: number, clientY: number): ICellData | null;
    getColumnOffset(position: number, region: ColumnRegion): number;
    getRowOffset(row: number): number;
    updateModelData(state: IDataModelState): void;
    setWrapperId(id: string): void;
    setInitialSize(): void;
    resize(args?: any): void;
    setFocus(focus: boolean): void;
    handleEvent(event: Event): void;
    destroy(): void;
    onAfterAttach(msg: any): void;
    messageHook(handler: any, msg: any): boolean;
    colorizeColumnBorder(data: ICellData, color: string): void;
    private addHighlighterManager;
    private addCellRenderers;
    private handleStateChanged;
}
