/// <reference path="../../../index.d.ts" />
import { IBeakerXDataGridState } from "../store/BeakerXDataStore";
import { IColumnPosition, IColumnState } from "../interface/IColumn";
import { ALL_TYPES } from "../dataTypes";
import { SORT_ORDER } from "./enums";
export declare const selectColumnStates: (state: IBeakerXDataGridState) => Map<string, IColumnState>;
export declare const selectColumnStatesArray: import("reselect").OutputSelector<IBeakerXDataGridState, any, (res: Map<string, IColumnState>) => any>;
export declare const selectBodyColumnStates: import("reselect").OutputSelector<IBeakerXDataGridState, any, (res: any) => any>;
export declare const selectVisibleBodyColumns: import("reselect").OutputSelector<any, any, (res1: any, res2: {}, res3: string[]) => any>;
export declare const selectColumnStateByKey: (state: any, key: any) => IColumnState;
export declare const selectColumnState: (state: IBeakerXDataGridState, column: any) => IColumnState;
export declare const selectColumnDataTypeName: import("reselect").OutputParametricSelector<IBeakerXDataGridState, any, string, (res: IColumnState) => string>;
export declare const selectColumnHorizontalAlignment: (state: IBeakerXDataGridState, column: any) => import("@phosphor/widgets/lib/layout").Layout.HorizontalAlignment;
export declare const selectColumnDisplayType: (state: IBeakerXDataGridState, column: any) => string | ALL_TYPES;
export declare const selectColumnFilter: (state: IBeakerXDataGridState, column: any) => string;
export declare const selectColumnDataType: (state: IBeakerXDataGridState, column: any) => ALL_TYPES;
export declare const selectColumnSortOrder: (state: IBeakerXDataGridState, column: any) => SORT_ORDER;
export declare const selectColumnKeepTrigger: (state: IBeakerXDataGridState, column: any) => boolean;
export declare const selectColumnFormatForTimes: (state: IBeakerXDataGridState, column: any) => any;
export declare const selectColumnWidth: (state: IBeakerXDataGridState, column: any) => number;
export declare const selectColumnPosition: (state: IBeakerXDataGridState, column: any) => IColumnPosition;
export declare const selectColumnIndexByPosition: import("reselect").OutputParametricSelector<any, IColumnPosition, number, (res1: any, res2: IColumnPosition) => number>;
export declare const selectOutputColumnLimit: (state: IBeakerXDataGridState) => any;
